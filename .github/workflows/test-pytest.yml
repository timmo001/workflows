---
name: "Test - Pytest"

# yamllint disable-line rule:truthy
on:
  workflow_call:
    inputs:
      code-path:
        required: false
        type: string
        default: "."
      module-name:
        required: true
        type: string
      pre-run-command:
        required: false
        type: string
    secrets:
      CODECOV_TOKEN:
        required: true

jobs:
  test-pytest:
    name: "üß™ Run pytest"
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Check out code from GitHub
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.head_ref }}
      - name: üèó Set up Python
        uses: actions/setup-python@v5.0.0
        with:
          check-latest: true
          python-version: "3.12"
          architecture: "x64"
          cache: "pip"
      - name: üì¶ Install test requirements
        run: |
          python -m pip install -r requirements_test.txt
          # Ideally this should be part of our dependencies
          # However this plugin is fairly new and doesn't run correctly
          # on a non-GitHub environment.
          pip install pytest-github-actions-annotate-failures==0.1.3
        working-directory: ${{ inputs.code-path }}
      - name: üöÄ Run pre-run-command
        if: ${{ inputs.pre-run-command }}
        run: ${{ inputs.pre-run-command }}
        working-directory: ${{ inputs.code-path }}
      - name: üì¶ Install package
        run: |
          python -m pip install .
        working-directory: ${{ inputs.code-path }}
      - name: üß™ Run pytest
        timeout-minutes: 60
        id: pytest-full
        env:
          PYTHONDONTWRITEBYTECODE: 1
        run: |
          python --version
          python -m pytest \
            -qq \
            --timeout=9 \
            --cov="${{ inputs.module-name }}" \
            --cov-report=xml \
            --cov-report=term-missing \
            -o console_output_style=count \
            -p no:sugar \
            tests \
              2>&1 | tee pytest-${{ inputs.module-name }}.txt
        working-directory: ${{ inputs.code-path }}
      - name: "Upload pytest output"
        if: success() || failure() && steps.pytest-full.conclusion == 'failure'
        uses: actions/upload-artifact@v3.1.2
        with:
          name: pytest-${{ github.run_number }}
          path: ${{ inputs.code-path }}/pytest-*.txt
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          name: coverage-${{ inputs.module-name}}
          path: coverage.xml
          overwrite: true
  test-coverage:
    name: "‚ÜóÔ∏è Upload test coverage to Codecov"
    runs-on: ubuntu-latest
    needs:
      - test-pytest
    timeout-minutes: 10
    steps:
      - name: ‚§µÔ∏è Check out code from GitHub
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.head_ref }}
      - name: ‚¨áÔ∏è Download all coverage artifacts
        uses: actions/download-artifact@v4.1.4
        with:
          pattern: coverage-*
      - name: Upload coverage to Codecov
        uses: Wandalen/wretry.action@v1.4.8
        with:
          action: codecov/codecov-action@v3.1.3
          with: |
            fail_ci_if_error: true
            flags: full-suite
            token: ${{ secrets.CODECOV_TOKEN }}
          attempt_limit: 5
          attempt_delay: 30000
