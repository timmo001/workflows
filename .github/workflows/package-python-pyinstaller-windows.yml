---
name: Package Python Application Windows

# yamllint disable-line rule:truthy
on:
  workflow_call:
    inputs:
      additional-artifact-1-name:
        required: false
        type: string
      additional-artifact-1-path:
        required: false
        type: string
      additional-artifact-2-name:
        required: false
        type: string
      additional-artifact-2-path:
        required: false
        type: string
      additional-pyinstaller-options:
        required: false
        type: string
      create-setup:
        required: false
        type: boolean
        default: false
      entry-point-file:
        required: true
        type: string
      name:
        required: true
        type: string
      pre-package-command:
        required: false
        type: string
      upload-executable:
        required: false
        type: boolean
        default: false

jobs:
  package-python-windows:
    name: üöÄ Windows - Package Python Application - ${{ inputs.name }}
    runs-on: windows-latest
    steps:
      - name: ‚§µÔ∏è Check out code from GitHub
        uses: actions/checkout@v4.1.7
        with:
          ref: ${{ github.head_ref }}
      - name: üèó Set up Python
        uses: actions/setup-python@v5.1.1
        with:
          architecture: "x64"
          cache: "pip"
          check-latest: true
          python-version: "3.12"
      - name: üèó Install setuptools, wheel, pyinstaller
        run: |
          python -V
          pip -V
          pip install --upgrade uv
          uv venv
          uv pip install --upgrade setuptools wheel pyinstaller
      - name: ‚¨áÔ∏è Download additional artifacts - ${{ inputs.additional-artifact-1-name }}
        uses: actions/download-artifact@v4.1.7
        if: ${{ inputs.additional-artifact-1-name }}
        with:
          name: ${{ inputs.additional-artifact-1-name }}
          path: ${{ inputs.additional-artifact-1-path }}
      - name: ‚¨áÔ∏è Download additional artifacts - ${{ inputs.additional-artifact-2-name }}
        uses: actions/download-artifact@v4.1.7
        if: ${{ inputs.additional-artifact-2-name }}
        with:
          name: ${{ inputs.additional-artifact-2-name }}
          path: ${{ inputs.additional-artifact-2-path }}
      - name: üöÄ Run pre-package-command
        if: ${{ inputs.pre-package-command }}
        run: |
          ${{ inputs.pre-package-command }}
      - name: üì¶ Create executable
        run: >
          $filename = "${{ inputs.entry-point-file }}"

          if ($filename -match '^https?://')
          {
              Invoke-WebRequest -Uri ${{ inputs.entry-point-file }} -OutFile ${{ inputs.name }}.py
              $filename = "${{ inputs.name }}.py"
          }

          pyinstaller `
            --clean `
            --noconfirm `
            ${{ inputs.additional-pyinstaller-options }} `
            $filename
      - name: ‚¨ÜÔ∏è Upload Artifacts - Executable
        uses: actions/upload-artifact@v4.3.4
        if: ${{ inputs.upload-executable }}
        with:
          name: windows-executable-${{ inputs.name }}
          path: dist
      - name: üöÄ Create setup file
        if: ${{ inputs.create-setup || github.event_name == 'release' }}
        uses: joncloud/makensis-action@v4.1
        with:
          script-file: installer-${{ inputs.name }}.nsi
          # arguments: "/DPRODUCT_VERSION=${{ needs.get_version.outputs.version }}"
      - name: ‚¨ÜÔ∏è Upload Artifacts - Setup
        if: ${{ inputs.create-setup || github.event_name == 'release' }}
        uses: actions/upload-artifact@v4.3.4
        with:
          name: windows-setup-${{ inputs.name }}
          path: "*setup.exe"
      - name: ‚¨ÜÔ∏è Upload to Release Assets - Setup
        if: ${{ inputs.create-setup && github.event_name == 'release' }}
        uses: softprops/action-gh-release@v2
        with:
          files: |
            *setup.exe
