---
name: Package Python Application Windows

# yamllint disable-line rule:truthy
on:
  workflow_call:
    inputs:
      additional-artifacts-name:
        required: false
        type: string
      additional-artifacts-path:
        required: false
        type: string
      additional-pyinstaller-options:
        required: false
        type: string
      create-setup:
        required: false
        type: boolean
        default: false
      entry-point-file:
        required: true
        type: string
      pre-package-command:
        required: false
        type: string

jobs:
  package-python-windows:
    name: 🚀 Windows - Package Python Application
    # runs-on: ${{ inputs.create-setup && 'self-hosted' || 'windows-latest' }}
    runs-on: windows-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.head_ref }}
      - name: 🏗 Set up Python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: "3.12"
          architecture: "x64"
          cache: "pip"
      - name: 🏗 Install setuptools, wheel, pyinstaller
        run: |
          pip install --upgrade setuptools wheel pyinstaller
      - name: ⬇️ Download additional artifacts
        uses: actions/download-artifact@v4.1.0
        if: ${{ inputs.additional-artifacts-name }}
        with:
          name: ${{ inputs.additional-artifacts-name }}
          path: ${{ inputs.additional-artifacts-path }}

      - name: 🚀 Run pre-package-command
        if: ${{ inputs.pre-package-command }}
        run: |
          ${{ inputs.pre-package-command }}
      - name: 📦 Create executable
        run: >
          pyinstaller `
            --clean `
            --noconfirm `
            ${{ inputs.additional-pyinstaller-options }} `
            ${{ inputs.entry-point-file }}
      - name: 🚀 Create setup file
        if: ${{ inputs.create-setup && github.ref == 'refs/heads/master' || github.event_name == 'release' }}
        uses: joncloud/makensis-action@v4
        with:
          script-file: scripts/installer.nsi
          # arguments: "/DPRODUCT_VERSION=${{ needs.get_version.outputs.version }}"
      - name: ⬆️ Upload Artifacts - Setup
        if: ${{ inputs.create-setup && github.ref == 'refs/heads/master' || github.event_name == 'release' }}
        uses: actions/upload-artifact@v4.0.0
        with:
          name: windows-setup
          path: "*setup.exe"
      - name: ⬆️ Upload to Release Assets - Setup
        if: ${{ inputs.create-setup && github.event_name == 'release' }}
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *setup.exe
