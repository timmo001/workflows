---
name: Package Python Application Linux

# yamllint disable-line rule:truthy
on:
  workflow_call:
    inputs:
      additional-artifact-1-name:
        required: false
        type: string
      additional-artifact-1-path:
        required: false
        type: string
      additional-artifact-2-name:
        required: false
        type: string
      additional-artifact-2-path:
        required: false
        type: string
      additional-pyinstaller-options:
        required: false
        type: string
      create-setup:
        required: false
        type: boolean
        default: false
      entry-point-file:
        required: true
        type: string
      name:
        required: true
        type: string
      pre-package-command:
        required: false
        type: string
      upload-executable:
        required: false
        type: boolean
        default: false

jobs:
  package-python-linux:
    name: 🚀 Linux - Package Python Application - ${{ inputs.name }}
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4.2.2
        with:
          ref: ${{ github.head_ref }}
      - name: 🏗️ Set up Python
        uses: actions/setup-python@v5.4.0
        with:
          architecture: "x64"
          cache: "pip"
          check-latest: true
          python-version: "3.12"
      - name: 🏗️ Install dependencies
        run: |
          sudo apt update
          sudo apt install libavahi-compat-libdnssd-dev libegl-dev libpulse0
          wget https://github.com/goreleaser/nfpm/releases/download/v2.34.0/nfpm_2.34.0_amd64.deb
          sudo apt install ./nfpm_2.34.0_amd64.deb
          rm ./nfpm_2.34.0_amd64.deb
      - name: 🏗️ Install setuptools, wheel, pyinstaller
        run: |
          python -V
          pip -V
          pip install --upgrade uv
          uv venv
          uv pip install --upgrade setuptools wheel pyinstaller
      - name: ⬇️ Download additional artifacts - ${{ inputs.additional-artifact-1-name }}
        uses: actions/download-artifact@v4.2.0
        if: ${{ inputs.additional-artifact-1-name }}
        with:
          name: ${{ inputs.additional-artifact-1-name }}
          path: ${{ inputs.additional-artifact-1-path }}
      - name: ⬇️ Download additional artifacts - ${{ inputs.additional-artifact-2-name }}
        uses: actions/download-artifact@v4.2.0
        if: ${{ inputs.additional-artifact-2-name }}
        with:
          name: ${{ inputs.additional-artifact-2-name }}
          path: ${{ inputs.additional-artifact-2-path }}
      - name: 🚀 Run pre-package-command
        if: ${{ inputs.pre-package-command }}
        run: |
          ${{ inputs.pre-package-command }}
      - name: 📦 Create executable
        run: >
          filename="${{ inputs.entry-point-file }}"

          if [[ $filename == http* ]]; then
            wget -O ${{ inputs.name }}.py ${{ inputs.entry-point-file }}
            filename="${{ inputs.name }}.py"
          fi

          pyinstaller \
            --clean \
            --noconfirm \
            ${{ inputs.additional-pyinstaller-options }} \
            $filename
      - name: ⬆️ Upload Artifacts - Executable
        uses: actions/upload-artifact@v4.6.2
        if: ${{ inputs.upload-executable }}
        with:
          name: linux-executable-${{ inputs.name }}
          path: dist
      - name: 🚀 Create apk file
        if: ${{ inputs.create-setup || github.event_name == 'release' }}
        run: |
          nfpm package --config nfpm-${{ inputs.name }}.yml --packager apk
      - name: ⬆️ Upload Artifacts - apk
        if: ${{ inputs.create-setup || github.event_name == 'release' }}
        uses: actions/upload-artifact@v4.6.2
        with:
          name: linux-apk-${{ inputs.name }}
          path: "*.apk"
      - name: 🚀 Create deb file
        if: ${{ inputs.create-setup || github.event_name == 'release' }}
        run: |
          nfpm package --config nfpm-${{ inputs.name }}.yml --packager deb
      - name: ⬆️ Upload Artifacts - deb
        if: ${{ inputs.create-setup || github.event_name == 'release' }}
        uses: actions/upload-artifact@v4.6.2
        with:
          name: linux-deb-${{ inputs.name }}
          path: "*.deb"
      - name: 🚀 Create rpm file
        if: ${{ inputs.create-setup || github.event_name == 'release' }}
        run: |
          nfpm package --config nfpm-${{ inputs.name }}.yml --packager rpm
      - name: ⬆️ Upload Artifacts - rpm
        if: ${{ inputs.create-setup || github.event_name == 'release' }}
        uses: actions/upload-artifact@v4.6.2
        with:
          name: linux-rpm-${{ inputs.name }}
          path: "*.rpm"
      - name: ⬆️ Upload to Release Assets - apk, deb, rpm
        if: ${{ inputs.create-setup && github.event_name == 'release' }}
        uses: softprops/action-gh-release@v2
        with:
          files: |
            *.apk
            *.deb
            *.rpm
