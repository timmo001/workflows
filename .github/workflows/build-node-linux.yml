---
name: Build Node Linux

# yamllint disable-line rule:truthy
on:
  workflow_call:
    inputs:
      additional-build-commands:
        required: false
        type: string
      artifact-name:
        required: false
        type: string
        default: "build"
      artifact-path:
        required: false
        type: string
        default: "build"
      code-path:
        required: false
        type: string
        default: "."
      use-cache-next:
        required: false
        type: boolean
        default: false
      use-bun:
        required: false
        type: boolean
        default: false
      use-pnpm:
        required: false
        type: boolean
        default: false

jobs:
  build-node-linux:
    name: 🚀 Build - Linux
    runs-on: ubuntu-latest
    steps:
      - name: 🏗️ Install dependencies
        run: |
          sudo apt update
          sudo apt install libavahi-compat-libdnssd-dev libxtst-dev libpng++-dev libxext-dev libxss-dev libopengl0
          wget https://github.com/goreleaser/nfpm/releases/download/v2.8.0/nfpm_amd64.deb
          sudo apt install ./nfpm_amd64.deb
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4.2.2
        with:
          ref: ${{ github.head_ref }}
      - name: 🥖 Install Bun
        if: ${{ inputs.use-bun }}
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: 🍎 Install pnpm
        if: ${{ inputs.use-pnpm }}
        uses: pnpm/action-setup@v4
      - name: 🏗️ Set up Node.js (pnpm)
        if: ${{ inputs.use-pnpm }}
        uses: actions/setup-node@v4.0.2
        with:
          cache-dependency-path: ${{ inputs.code-path }}/**/pnpm-lock.yaml
          cache: pnpm
          check-latest: true
          node-version: 20.x
      - name: 🏗️️ Set up Node.js (yarn)
        if: ${{ !inputs.use-bun && !inputs.use-pnpm }}
        uses: actions/setup-node@v4.0.2
        with:
          cache-dependency-path: ${{ inputs.code-path }}/**/yarn.lock
          cache: yarn
          check-latest: true
          node-version: 20.x
      - name: 🏗️ Cache Next.js (pnpm)
        if: ${{ inputs.use-cache-next && inputs.use-pnpm }}
        uses: actions/cache@v4.0.2
        with:
          path: |
            ~/.pnpm-store
            ${{ inputs.code-path }}/.next/cache
          key: ${{ runner.os }}-${{ hashFiles('${{ inputs.code-path }}/**/pnpm-lock.yaml') }}-${{ hashFiles('${{ inputs.code-path }}/**.[jt]s', '${{ inputs.code-path }}/**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('${{ inputs.code-path }}/**/pnpm-lock.yaml') }}-
      - name: 🏗️ Cache Next.js (yarn)
        if: ${{ inputs.use-cache-next && !inputs.use-bun && !inputs.use-pnpm }}
        uses: actions/cache@v4.0.2
        with:
          path: |
            ~/.yarn
            ${{ inputs.code-path }}/.next/cache
          key: ${{ runner.os }}-${{ hashFiles('${{ inputs.code-path }}/**/yarn.lock') }}-${{ hashFiles('${{ inputs.code-path }}/**.[jt]s', '${{ inputs.code-path }}/**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('${{ inputs.code-path }}/**/yarn.lock') }}-
      - name: 🏗️ Install dependencies
        run: |
          if [ ${{ inputs.use-pnpm }} ]; then
              pnpm install
          elif [ ${{ inputs.use-bun }} ]; then
              bun install
          else
              yarn install
          fi
        working-directory: ${{ inputs.code-path }}
      - name: 🏗️️ Build
        run: |
          cd ${{ inputs.code-path }}
          if [ ${{ inputs.use-pnpm }} ]; then
              pnpm build
          elif [ ${{ inputs.use-bun }} ]; then
              bun run build
          else
              yarn build
          fi
          ${{ inputs.additional-build-commands }}
      - name: ⬆️ Upload Artifacts
        uses: actions/upload-artifact@v4.6.0
        with:
          name: ${{ inputs.artifact-name }}
          path: ${{ inputs.artifact-path }}
